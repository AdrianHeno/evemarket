<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class M extends CI_Controller {

	public function index()
	{
		$this->load->view('welcome_message');
	}
	
	private function get_cres($url){//Connect to CRES and execute the supplied GET string
		$curl = curl_init();
		
		//curl_setopt($curl, CURLOPT_HTTPHEADER, array('Authorization: Basic ' . base64_encode("$username:$password")));
		curl_setopt($curl, CURLOPT_URL, $url);
		curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);
		curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0);
		curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 0);
		curl_setopt($curl, CURLOPT_VERBOSE, true);
		
		$verbose = fopen('php://temp', 'rw+');
		curl_setopt($curl, CURLOPT_STDERR, $verbose);
		
		$data = (curl_exec($curl));
		
		return json_decode($data);
	}
	
	private function market_region($region, $item, $type = "sell"){//Build a GET string to select all orders buy/sell for an item in a region
		$url = "https://crest-tq.eveonline.com/market/{$region}/orders/{$type}/?type=https://crest-tq.eveonline.com/inventory/types/{$item}/";
		return $this->get_cres($url);
	}
	
	function market_volume($region = "10000030", $item = "20211"){//Check the history of an item in a region to see how many items move in a week
		$last_week = strtotime("-1 week");
		$url = "https://crest-tq.eveonline.com/market/{$region}/history/?type=https://crest-tq.eveonline.com/inventory/types/$item/";
		$volume = $this->get_cres($url);
		$result = array();
		$i = 0;
		$s = 0;
		foreach($volume->items as $v){
			if(strtotime($v->date) > $last_week ){
				++ $i;
				$s = $s + $v->volume;
			}
			$result['total_volume'] = $s;
			$result['days_of_sale'] = $i;
		}
		return $result;
	}
	
	function get_items($groupID){
		$this->load->model('Invtypes_model');
		var_dump($groupID);
		foreach($groupID as $id){
			$result = $this->Invtypes_model->get_by_groupid($id);
			foreach($result as $r){
				if(!empty($r)){
					$itemIDs[$r->typeID] = $r->typeName;
				}	
			}
		}
		var_dump($itemIDs);
		die();
		
	}
	
	function region_trade(){//move through an array of market ids, look up each one in the 2 regions we are compairing against and gather the min sell in each
		set_time_limit(600);
		/*$items = array('12484', '12487', '20212', '25718', '20211', '12203', '12209', '12205', '12212', '12215', '12207', '10155', '15477', '9950',
					   '13234', '13260', '13261', '3265', '13216', '13225', '13166', '13223', '13218', '13245', '13226', '27186', '19202');
		//$items = array('12484', '12487');*/
		$item = $this->get_items(array(105,
106,
107,
108,
109,
110,
111,
118,
119,
120,
121,
123,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
139,
140,
141,
142,
143,
145,
147,
148,
151,
152,
154,
156,
157,
158,
160,
161,
162,
163,
165,
166,
167,
168,
169,
170,
172,
174,
175,
176,
177,
178,
218,
223,
224,
296,
342,
343,
344,
345,
346,
347,
348,
349,
350,
352,
356,
360,
371,
400,
401,
408,
410,
447,
477,
478,
486,
487,
489,
490,
503,
504,
516,
525,
532,
535,
537,
643,
651,
718,
722,
723,
724,
725,
726,
727,
787,
841,
853,
854,
855,
856,
857,
858,
859,
860,
870,
871,
888,
889,
890,
891,
912,
914,
915,
917,
918,
944,
945,
965,
973,
996,
1013,
83,
84,
85,
86,
87,
88,
89,
90,
372,
373,
374,
375,
376,
377,
384,
385,
386,
387,
394,
395,
396,
425,
476,
479,
482,
492,
497,
498,
500,
548,
648,
653,
654,
655,
656,
657,
663,
772,
863,
864,
892,
907,
908,
909,
910,
911,
916,
972,
976,
1010,
1019,
728,
729,
730,
731,
979,
361,
97,
100,
101,
299,
470,
544,
545,
549,
639,
640,
641,
1023,
300,
303,
304,
721,
738,
739,
740,
741,
742,
743,
744,
745,
746,
747,
748,
749,
750,
751,
783,
935,
17,
18,
20,
422,
423,
427,
428,
429,
712,
754,
886,
966,
967,
974,
38,
39,
40,
41,
43,
46,
47,
48,
49,
52,
53,
54,
55,
56,
57,
59,
60,
61,
62,
63,
65,
67,
68,
71,
72,
74,
76,
77,
78,
80,
82,
96,
98,
201,
202,
203,
205,
208,
209,
210,
211,
212,
213,
225,
285,
289,
290,
291,
295,
302,
308,
309,
315,
316,
317,
321,
325,
326,
328,
329,
330,
338,
339,
341,
353,
357,
367,
378,
379,
405,
406,
407,
464,
472,
475,
481,
483,
499,
501,
506,
507,
508,
509,
510,
511,
512,
514,
515,
518,
524,
538,
546,
585,
586,
588,
589,
590,
638,
642,
644,
645,
646,
647,
650,
658,
660,
737,
753,
762,
763,
764,
765,
766,
767,
768,
769,
770,
771,
773,
774,
775,
776,
777,
778,
779,
780,
781,
782,
786,
815,
842,
862,
878,
896,
899,
901,
904,
905,
1,
2,
19,
32,
436,
484,
661,
662,
881,
882,
977,
25,
26,
27,
28,
29,
30,
31,
237,
324,
358,
380,
381,
419,
420,
463,
485,
513,
540,
541,
543,
547,
659,
830,
831,
832,
833,
834,
883,
893,
894,
898,
900,
902,
906,
941,
963,
1022,
255,
256,
257,
258,
266,
268,
269,
270,
271,
272,
273,
274,
275,
278,
505,
989,
954,
955,
956,
957,
958));
		
		$prices_array = array();
		foreach($items as $item){
			$volume_check = $this->market_volume('10000030', $item);
			if($volume_check['days_of_sale'] > 3){//Check if the item has enough movement for us to bother checking prices
				$first = $this->market_region('10000002', $item, 'sell');//find min price for item in the forge
				$f_price = array();
				foreach($first->items as $f){
					$f_price[] = $f->price;
				}
				$prices_array[$item]['name'] = $f->type->name;
				$prices_array[$item]['10000002'] = min($f_price);
				
				$second = $this->market_region('10000030', $item, 'sell');//find min price for item in heimatar
				$s_price = array();
				foreach($second->items as $s){
					$s_price[] = $s->price;
				}
				
				$prices_array[$item]['10000030'] = min($s_price);
				$prices_array[$item]['margin'] = $prices_array[$item]['10000030'] - $prices_array[$item]['10000002'];//What is the total proffit per item
				$prices_array[$item]['percentage'] = (100 / $prices_array[$item]['10000002']) * $prices_array[$item]['margin']; //Proffit as a percentage of item value
				$prices_array[$item]['movement'] = $volume_check;
			}
			
		}
		
		$data['prices'] = $prices_array;
		$data['base_url'] = $this->config->item('base_url');
		$this->load->view('region_trading', $data);
	}
	
}
